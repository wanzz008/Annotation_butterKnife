package com.wzz.eventbus_lib;

/**
 * 线程模式
 */
/**
 * 线程模式
 */
public enum ThreadMode {
    /**
     * 将在发布事件的同一线程中调用订阅服务器。这是默认设置。事件传递
     * 这意味着开销最小，因为它完全避免了线程切换。因此，这是推荐的模式
     * 已知要完成的简单任务时间很短，不需要主线程。事件处理
     * 使用此模式必须快速返回，以避免阻塞可能是主线程的发布线程。
     * 主-主，子-子   发布者与订阅者一定要在同一种线程内
     */
    POSTING,

    /**
     * 订阅服务器将在Android的主线程（有时称为UI线程）中被调用。如果过账线程是
     * 将直接调用主线程、事件处理程序方法。使用此模式的事件处理程序必须返回
     * 快速避免阻塞主线程.
     * 主-主，子-主
     */
    MAIN,

    /**
     * 将在后台线程中调用订阅服务器。如果发布线程不是主线程，则事件处理程序方法
     * 将直接在发布线程中调用。如果发布线程是主线程，则eventbus使用一个
     * 后台线程，将按顺序传递其所有事件。使用此模式的事件处理程序应尝试
     * 快速返回以避免阻塞后台线程.
     * 主-子，子-子
     */
    BACKGROUND,

    /**
     * 在单独的线程中调用事件处理程序方法。这始终独立于发布线程和
     * ＊主线程。发布事件从不等待使用此模式的事件处理程序方法。事件处理程序方法应该
     * 如果它们的执行可能需要一些时间，例如用于网络访问，请使用此模式。避免触发大量
     * 同时运行异步处理程序方法以限制并发线程的数量。事件总线
     * 使用线程池有效地重用已完成异步事件处理程序通知中的线程.
     */
    ASYNC
}
